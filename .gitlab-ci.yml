image: registry.gitlab.com/inendi/docker-images/inspector_build:main

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  CACHE_COMPRESSION_LEVEL: "fastest"
  UPDATE_INSTALLERS_ONLY:
    value: "false"
    description: "Only update the various installers, do not build the software"

stages:
  - build
  - test
  - pages
  - publish

.build:
  stage: build
  tags:
    - privileged-docker
  before_script:
    - for f in .git/modules/*/config .git/config; do sed "s/gitlab-ci-token:[[:alnum:]]\+/gitlab-ci_read-repository:$GITLAB_DEPLOY_TOKEN_READ_REPOSITORY/g" -i "$f"; done
    - mkdir -p "$CI_PROJECT_DIR/public/flatpak"
    - cd buildstream
  interruptible: true

build testsuite:
  extends: .build
  script:
    - ./build.sh 
        --branch="${CI_COMMIT_REF_NAME}" 
        --workspace-prefix="/bst_workspace" 
        --flatpak-export=$(echo $CI_MERGE_REQUEST_LABELS | grep -q "action::flatpak_export" && echo true || echo false) 
        --flatpak-repo="/srv/flatpak_repo" 
        --crash-reporter-token=$INSPECTOR_CRASH_REPORTER_TOKEN
  rules:
    - if: '$CI_MERGE_REQUEST_IID && $CI_COMMIT_TAG =~ "/^$/" && $UPDATE_INSTALLERS_ONLY == "false"'

build release:
  extends: .build
  script:
    - if [ "$UPDATE_INSTALLERS_ONLY" = "false" ]; then
      ./build.sh 
      --user-target=customer 
      --branch="${CI_COMMIT_REF_NAME}" 
      --workspace-prefix="/bst_workspace" 
      --flatpak-export=true 
      --flatpak-repo="$CI_PROJECT_DIR/public/flatpak" 
      --gpg-private-key-path=$GPG_PRIVATE_KEY 
      --gpg-sign-key=ADAD28A413FCB239A979C83B7C828C315B98BC63 
      --crash-reporter-token=$INSPECTOR_CRASH_REPORTER_TOKEN 
      ; fi
  artifacts:
    paths:
    - public/flatpak
  rules:
    - if: $CI_COMMIT_TAG =~ /^release-\d+\.\d+\.\d+$/
      when: manual
    - if: '$UPDATE_INSTALLERS_ONLY == "true"'
  allow_failure: false

pages:
  stage: pages
  tags:
    - privileged-docker
  needs:
    - build release
  dependencies:
    - build release
  before_script:
    - cp nsis/resources/{AccessControl.dll,ExecDos.dll,INetC.dll,KillProcDLL.dll} /usr/share/nsis/Plugins/x86-unicode/
  script:
    - PAGES=`curl -s -X GET -I ${CI_PAGES_URL}/install.flatpakref | head -n 1 | cut -d$' ' -f2 | grep -c 200` || true
    - PIPELINE_ID=`curl -s -X GET ${CI_API_V4_URL}/projects/inendi%2Finspector/pipelines?scope=tags | jq -r .[0].id`
    - JOB_ID=`curl -s -X GET ${CI_API_V4_URL}/projects/inendi%2Finspector/pipelines/${PIPELINE_ID}/jobs | jq -r '.[] | select(.stage=="pages") | .id'`
    - 'if [ $PAGES -eq 1 ] && [ $UPDATE_INSTALLERS_ONLY = "true" ]; then rm -rf $CI_PROJECT_DIR/public/flatpak && curl -XGET -L ${CI_PROJECT_URL}/-/jobs/${JOB_ID}/artifacts/download | bsdtar -xvf- && rm -rf $CI_PROJECT_DIR/public/inendi-inspector_installer_*.exe || true; fi'
    - cd nsis && ./build.sh && cp inendi-inspector_installer.exe "$CI_PROJECT_DIR/public" ; cd -
    - cp "public/inendi-inspector_installer.exe" "public/inendi-inspector_installer_$(md5sum public/inendi-inspector_installer.exe | awk '{ print $1 }').exe"
    - cp buildstream/install.flatpakref public
    - cp -r docker inendi-inspector_docker && 
      zip -r public/inendi-inspector_docker.zip inendi-inspector_docker && 
      rm -rf inendi-inspector_docker
    - 'if [ $UPDATE_INSTALLERS_ONLY != "true" ]; then ostree checkout -U --repo=public/flatpak app/com.gitlab.inendi.Inspector/x86_64/main public/flatpak_app && cd public/flatpak_app && tar -I lbzip2 -cf "$CI_PROJECT_DIR/public/inendi-inspector_flatpak.tar.bz2" . && rm -rf "$CI_PROJECT_DIR/public/flatpak_app" ; fi'
  artifacts:
    paths:
      - public
    when: on_success
    expire_in: 1 year
  rules:
    - if: $CI_COMMIT_TAG =~ /^release-\d+\.\d+\.\d+$/
    - if: '$UPDATE_INSTALLERS_ONLY == "true"'
  interruptible: true

flathub:
  stage: publish
  tags:
    - privileged-docker
  needs:
    - pages
  before_script:
    - eval $(ssh-agent -s)
    - echo "$SSH_FLATHUB_PRIVATE_KEY_B64" | base64 -d | ssh-add - > /dev/null
    - rm -rf com.gitlab.inendi.Inspector && git clone git@github.com:flathub/com.gitlab.inendi.Inspector.git
    - git config user.name "$FLATHUBGITCREDENTIALUSERNAME"
    - git config user.email "$FLATHUBGITCREDENTIALEMAIL"
  script:
    - cp "$CI_PROJECT_DIR/flathub/flathub.json" "$CI_PROJECT_DIR/com.gitlab.inendi.Inspector"
    - jinja2 -D sha256=$(sha256sum "$CI_PROJECT_DIR/public/inendi-inspector_flatpak.tar.bz2" | awk '{print $1 }') $CI_PROJECT_DIR/flathub/com.gitlab.inendi.Inspector.yaml.j2 > "$CI_PROJECT_DIR/com.gitlab.inendi.Inspector/com.gitlab.inendi.Inspector.yaml"
    - cd "$CI_PROJECT_DIR/com.gitlab.inendi.Inspector"
    - git commit -a -m "Publish version $(cat $CI_PROJECT_DIR/VERSION.txt | tr -d '\n')" || echo "No changes to commit"
    - git push
  rules:
    - if: $CI_COMMIT_TAG =~ /^release-\d+\.\d+\.\d+$/
  
sast:
  variables:
    SAST_EXCLUDED_PATHS: external, tests, doc
    SAST_EXCLUDED_ANALYZERS: bandit, brakeman, gosec, kubesec, nodejs-scan, phpcs-security-audit,
      pmd-apex, security-code-scan, sobelow, spotbugs
  stage: test
  tags:
    - privileged-docker
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule"
    when: manual
    allow_failure: true
include:
- template: Security/SAST.gitlab-ci.yml
