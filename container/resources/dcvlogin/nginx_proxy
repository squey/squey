# Mapping function for websockets
map $http_upgrade $connection_upgrade {
  default upgrade;
  ''      close;
}

# Redirect all non-encrypted to encrypted
server {
   listen 80;
   listen [::]:80;
   server_name _;
   return 301 https://$server_name$request_uri;
}

server {
        listen 443 http2 ssl default_server;
        listen [::]:443 http2 ssl default_server;
        include snippets/snakeoil.conf;
        ssl_certificate /etc/dcv/dcv.pem;
        ssl_certificate_key /etc/dcv/dcv.key;
        
        ########################################################################
        # from https://cipherli.st/                                            #
        # and https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html #
        ########################################################################

        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
        ssl_ecdh_curve secp384r1;
        ssl_session_cache shared:SSL:10m;
        ssl_session_tickets off;
        ssl_stapling on;
        ssl_stapling_verify on;
        add_header Strict-Transport-Security "max-age=63072000; includeSubdomains";
        # add_header X-Frame-Options DENY;  # This option MUST NOT EXIST
        add_header X-Content-Type-Options nosniff;

        error_log /var/log/nginx/proxy_error.log;

        # NICE DCV server web interface
        location /dcv/ {
                proxy_pass      https://localhost:8443/;
                # WebSocket support
                proxy_buffering off;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection $connection_upgrade;
        }

        # Squey login page
        location / {
                proxy_pass      https://localhost:8445;
                proxy_http_version 1.1;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header Referer $http_referer;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_set_header X-Forwarded-Host $host;
                proxy_set_header X-Forwarded-Server $host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header Host $http_host;
                proxy_buffering off;
        }
}
